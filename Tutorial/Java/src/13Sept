// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
    
    public int GetPivotIndex(int arr[], int size)
    {
        int start=0, high=size-1;
        int temp[] = new int[size];
        int pivot = arr[high];
        int j = 0;
        for (int i = start; i <= high; i++){
            if (arr[i] < pivot)
            {
                temp[j++] = arr[i];
            }
        }
        int position = j;
       
        for (int i = start; i <= high; i++){
            if (arr[i] > pivot)
            {
                temp[j++] = arr [i];
            }
        }
        for(int i=0; i<size; i++){
            arr[i] = temp[i];
        }
        return position;
    }

}


// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
        int[] arr = {7,2,1,6,8,5,3,4};
        HelloWorld hw = new HelloWorld();
        System.out.print("Partition Index = " + hw.GetPivotIndex(arr,0,7));
        
        System.out.println("Printing array post Partioning");
        for(int i = 0; i < 8; i++)
            System.out.print(arr[i] + " ");
    }
    
    public int GetPivotIndex(int[] arr, int start, int end){
        int pivot = arr[end];
        int pivotIndex = start;
        
        for(int i = start; i < end; i++){
            if(arr[i] <= pivot){ // swap the arr[i] to arr[pivotIndex]
                Swap(arr, i, pivotIndex); 
                pivotIndex++;
            }
        }
        
        Swap(arr, pivotIndex, end); // pivot is at end index
        
        return pivotIndex;
    }
    
    private void Swap(int[] arr, int from, int to){
        int temp = arr[from];
        arr[from] = arr[to];
        arr[to] = temp;
    }
}

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
        
        HelloWorld hw = new HelloWorld();
        int[] arr = {2,3,3,3,3,3,4,5,6,7,9,11,14};
        System.out.println("Count of 3 = "+ hw.GetCount(arr, 11, 3));
    }
    
    public int GetCount(int arr[], int size, int target){
        //int first = FirstOccurance(arr,size, target);
        //int last = LastOccurance(arr, target);
        int first = GetIndex(arr,size, target, true);
        int last = GetIndex(arr,size, target, false);
        return (last-first)+1;
    }
    
    // flag == true -> leftMostIndex
    // flag == false -> rightMostIndex
    public int GetIndex(int arr[], int size, int target, boolean flag){
        int low = 0, high = size-1;
        int res = -1;
        
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == target){
                res = mid;
                if(flag == true) // leftMost
                    high = mid-1;
                else{ // rightMost
                    low = mid+1;
                }
            }
            else if(target>arr[mid]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return res;
    }
    
    public int FirstOccurance(int arr[], int size, int target){
        int low = 0, high = size-1;
        int res = -1;
        
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == target){
                res = mid;
                high = mid-1;
            }
            else if(target>arr[mid]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return res;
    }
    
    public int LastOccurance(int arr[], int target){
        int low = 0, high = arr.length-1;
        int res = -1;
        
        while(low<=high){
            int mid = (low+high)/2;
            if(arr[mid] == target){
                res = mid;
                low = mid+1;
            }
            else if(target>arr[mid]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        return res;
    }
}


// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
    }
    
    public int BinarySearchFirstOccurance(int[] arr, int size, int target)
    {
        int start = 0;
        int end = size-1;
        
        int result = -1;
    
        while(start <= end)
        {
            int mid  = start + (end - start)/2;
            
            if(arr[mid] == target)
            {
                // return 
                result = mid;
                end = mid -1;
            }
            else if(arr[mid] > target) end = mid -1;
            else start = mid +1;
        }
        return result; // 1st occurance 
    }

}
}